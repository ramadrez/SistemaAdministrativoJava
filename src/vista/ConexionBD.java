/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vista;

import conexion.Conexion;
import config.Archivo;
import config.Encriptacion;
import controlador.Ctrl_DB;
import java.awt.Color;
import java.awt.Image;
import java.awt.KeyboardFocusManager;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Rama
 */
public class ConexionBD extends javax.swing.JFrame {

    /**
     * Creates new form ConexionBD
     */
    int xMouse, yMouse;

    public ConexionBD() {
        initComponents();
        this.setResizable(false);
        this.setLocationRelativeTo(null);
        this.setBackground(new Color(0, 0, 0, 0));
        this.setTitle("Database Connection - Inversiones El Costeño 2023");

        UserTextField.setFocusTraversalKeys(KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS,
                java.util.Collections.EMPTY_SET);

        jPasswordField.setFocusTraversalKeys(KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS,
                java.util.Collections.EMPTY_SET);
        setIconImage(getIconImage());
    }

    @Override
    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("img/icon/iconConfigBD.png"));
        return retValue;
    }

    public void keyPressed(KeyEvent e) {
        if (UserTextField.getText().equals("Ingrese su nombre de usuario")) {
            UserTextField.setText("");
            UserTextField.setForeground(Color.black);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Contenedor = new vista.JpanelRound();
        Header = new vista.JpanelRound();
        ExitButton = new vista.JpanelRound();
        jLabel5 = new javax.swing.JLabel();
        Logo = new javax.swing.JLabel();
        iconoBD = new javax.swing.JLabel();
        texto1 = new javax.swing.JLabel();
        texto2 = new javax.swing.JLabel();
        User = new javax.swing.JLabel();
        Passwd = new javax.swing.JLabel();
        jPasswordField = new javax.swing.JPasswordField();
        UserTextField = new javax.swing.JTextField();
        button = new vista.JpanelRound();
        conectarTxt = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        Contenedor.setBackground(new java.awt.Color(255, 255, 255));
        Contenedor.setRoundBottomLeft(20);
        Contenedor.setRoundBottomRight(20);
        Contenedor.setRoundTopLeft(20);
        Contenedor.setRoundTopRight(20);
        Contenedor.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Header.setBackground(new java.awt.Color(255, 255, 255));
        Header.setMinimumSize(new java.awt.Dimension(430, 40));
        Header.setRoundTopLeft(50);
        Header.setRoundTopRight(50);
        Header.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                HeaderMouseDragged(evt);
            }
        });
        Header.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                HeaderMousePressed(evt);
            }
        });

        ExitButton.setBackground(new java.awt.Color(255, 255, 255));
        ExitButton.setPreferredSize(new java.awt.Dimension(37, 34));
        ExitButton.setRoundTopRight(20);

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/cierre.png"))); // NOI18N
        jLabel5.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel5MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout ExitButtonLayout = new javax.swing.GroupLayout(ExitButton);
        ExitButton.setLayout(ExitButtonLayout);
        ExitButtonLayout.setHorizontalGroup(
            ExitButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
        );
        ExitButtonLayout.setVerticalGroup(
            ExitButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout HeaderLayout = new javax.swing.GroupLayout(Header);
        Header.setLayout(HeaderLayout);
        HeaderLayout.setHorizontalGroup(
            HeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, HeaderLayout.createSequentialGroup()
                .addGap(0, 513, Short.MAX_VALUE)
                .addComponent(ExitButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        HeaderLayout.setVerticalGroup(
            HeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HeaderLayout.createSequentialGroup()
                .addComponent(ExitButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 6, Short.MAX_VALUE))
        );

        Contenedor.add(Header, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 550, -1));

        Logo.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        Logo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Logo.setText("Logo");
        Contenedor.add(Logo, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 30, 170, 110));

        iconoBD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Database Icon.png"))); // NOI18N
        Contenedor.add(iconoBD, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 120, -1, -1));

        texto1.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        texto1.setText("Para comenzar, ingresa los datos de acceso de tu \"Base de Datos\"");
        Contenedor.add(texto1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 230, -1, -1));

        texto2.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        texto2.setText("para inicializar la conexión.");
        Contenedor.add(texto2, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 250, -1, -1));

        User.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        User.setText("Usuario");
        Contenedor.add(User, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 290, -1, -1));

        Passwd.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        Passwd.setText("Contraseña");
        Contenedor.add(Passwd, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 370, -1, -1));

        jPasswordField.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jPasswordField.setForeground(java.awt.Color.gray);
        jPasswordField.setText("********");
        jPasswordField.setBorder(null);
        jPasswordField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPasswordFieldMousePressed(evt);
            }
        });
        jPasswordField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jPasswordFieldKeyPressed(evt);
            }
        });
        Contenedor.add(jPasswordField, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 400, 380, -1));

        UserTextField.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        UserTextField.setForeground(java.awt.Color.gray);
        UserTextField.setText("Ingrese su nombre de usuario");
        UserTextField.setBorder(null);
        UserTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                UserTextFieldMousePressed(evt);
            }
        });
        UserTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                UserTextFieldKeyPressed(evt);
            }
        });
        Contenedor.add(UserTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 320, 390, -1));

        button.setBackground(new java.awt.Color(3, 150, 166));
        button.setRoundBottomLeft(10);
        button.setRoundBottomRight(10);
        button.setRoundTopLeft(10);
        button.setRoundTopRight(10);

        conectarTxt.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        conectarTxt.setForeground(new java.awt.Color(255, 255, 255));
        conectarTxt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        conectarTxt.setText("Conectar");
        conectarTxt.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        conectarTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                conectarTxtMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                conectarTxtMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                conectarTxtMousePressed(evt);
            }
        });

        javax.swing.GroupLayout buttonLayout = new javax.swing.GroupLayout(button);
        button.setLayout(buttonLayout);
        buttonLayout.setHorizontalGroup(
            buttonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(conectarTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
        );
        buttonLayout.setVerticalGroup(
            buttonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(conectarTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
        );

        Contenedor.add(button, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 460, 200, 60));
        Contenedor.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 340, 380, -1));
        Contenedor.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 420, 380, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Contenedor, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Contenedor, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void HeaderMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HeaderMouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x - xMouse, y - yMouse);
    }//GEN-LAST:event_HeaderMouseDragged

    private void HeaderMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HeaderMousePressed
        xMouse = evt.getX();
        yMouse = evt.getY();
    }//GEN-LAST:event_HeaderMousePressed

    private void jPasswordFieldMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPasswordFieldMousePressed
        if (String.valueOf(jPasswordField.getPassword()).equals("********")) {
            jPasswordField.setText("");
            jPasswordField.setForeground(Color.black);
        }

        if (UserTextField.getText().isEmpty()) {
            UserTextField.setText("Ingrese su nombre de usuario");
            UserTextField.setForeground(Color.gray);
        }
    }//GEN-LAST:event_jPasswordFieldMousePressed

    private void jPasswordFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPasswordFieldKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            this.Conexion();
        }

        if (evt.getKeyCode() == KeyEvent.VK_TAB) {

            if (UserTextField.getText().equals("Ingrese su nombre de usuario")) {
                UserTextField.setText("");
                UserTextField.setForeground(Color.black);
            }

            if (String.valueOf(jPasswordField.getPassword()).isEmpty()) {
                jPasswordField.setText("********");
                jPasswordField.setForeground(Color.gray);
            }
            UserTextField.requestFocus();
        }
    }//GEN-LAST:event_jPasswordFieldKeyPressed

    private void UserTextFieldMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UserTextFieldMousePressed
        if (UserTextField.getText().equals("Ingrese su nombre de usuario")) {
            UserTextField.setText("");
            UserTextField.setForeground(Color.black);
        }

        if (String.valueOf(jPasswordField.getPassword()).isEmpty()) {
            jPasswordField.setText("********");
            jPasswordField.setForeground(Color.gray);
        }
    }//GEN-LAST:event_UserTextFieldMousePressed

    private void UserTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_UserTextFieldKeyPressed
        keyPressed(evt);

        if (evt.getKeyCode() == KeyEvent.VK_ENTER || evt.getKeyCode() == KeyEvent.VK_TAB) {
            if (String.valueOf(jPasswordField.getPassword()).equals("********")) {
                jPasswordField.setText("");
                jPasswordField.setForeground(Color.black);
            }

            if (UserTextField.getText().isEmpty()) {
                UserTextField.setText("Ingrese su nombre de usuario");
                UserTextField.setForeground(Color.gray);
            }
            jPasswordField.requestFocus();
        }
    }//GEN-LAST:event_UserTextFieldKeyPressed

    private void conectarTxtMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_conectarTxtMouseEntered
        button.setBackground(new Color(11, 105, 139));
    }//GEN-LAST:event_conectarTxtMouseEntered

    private void conectarTxtMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_conectarTxtMouseExited
        button.setBackground(new Color(3, 150, 166));
    }//GEN-LAST:event_conectarTxtMouseExited

    private void jLabel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseClicked
        System.exit(0);
    }//GEN-LAST:event_jLabel5MouseClicked

    private void conectarTxtMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_conectarTxtMousePressed
        this.Conexion();
    }//GEN-LAST:event_conectarTxtMousePressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConexionBD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConexionBD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConexionBD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConexionBD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConexionBD().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private vista.JpanelRound Contenedor;
    private vista.JpanelRound ExitButton;
    private vista.JpanelRound Header;
    private javax.swing.JLabel Logo;
    private javax.swing.JLabel Passwd;
    private javax.swing.JLabel User;
    private javax.swing.JTextField UserTextField;
    private vista.JpanelRound button;
    private javax.swing.JLabel conectarTxt;
    private javax.swing.JLabel iconoBD;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPasswordField jPasswordField;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel texto1;
    private javax.swing.JLabel texto2;
    // End of variables declaration//GEN-END:variables

    private void Conexion() {
        Encriptacion en = new Encriptacion();
        Archivo ar = new Archivo();
        Conexion cn = new Conexion();
        Login login = new Login();
        Ctrl_DB db = new Ctrl_DB();
        CrearUsuarioAdmin cus = new CrearUsuarioAdmin();

        String EncriptarUser = en.Encriptar(UserTextField.getText());
        String EncriptarPasswd = en.Encriptar(jPasswordField.getText());

        try {
            ar.CrearTxtUser(EncriptarUser);
            ar.CrearTxtPass(EncriptarPasswd);

            if (cn.conectarBD() == null) {
                JOptionPane.showMessageDialog(null, "Error al conectar, verifique los datos ingresados");
            } else {
                JOptionPane.showMessageDialog(null, "Conexion Exitosa");
                this.dispose();
                try {
                    Thread.sleep(1000);
                } catch (InterruptedException ex) {
                    Logger.getLogger(ConexionBD.class.getName()).log(Level.SEVERE, null, ex);
                }

                if (!db.verificacionBD()) {
                    if (db.CrearBD()) {
                        if (CargarBaseDatos()) {
                            if (!db.Administrador()) {
                                JOptionPane.showMessageDialog(null, "¡Ups! No encontramos al Administrador Principal. ¡Vamos a crearlo ahora mismo!");
                                cus.setVisible(true);
                            } else {
                                login.setVisible(true);
                            }
                        } else {
                            System.exit(0);
                        }
                    } else {
                        System.exit(0);
                    }

                } else if (!db.verificacionTablas()) {
                    if (CargarBaseDatos()) {
                        if (!db.Administrador()) {
                            JOptionPane.showMessageDialog(null, "¡Ups! No encontramos al Administrador Principal. ¡Vamos a crearlo ahora mismo!");
                            cus.setVisible(true);
                        } else {
                            login.setVisible(true);
                        }
                    } else {
                        System.exit(0);
                    }

                } else {
                    if (!db.Administrador()) {
                        JOptionPane.showMessageDialog(null, "¡Ups! No encontramos al Administrador Principal. ¡Vamos a crearlo ahora mismo!");
                        cus.setVisible(true);
                    } else {
                        login.setVisible(true);
                    }
                }

            }
        } catch (IOException ex) {
            Logger.getLogger(ConexionBD.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    public boolean CargarBaseDatos() {

        Encriptacion en = new Encriptacion();
        Archivo ar = new Archivo();
        String userD = en.Desencriptar(ar.LeerArchivoUser());
        String passD = en.Desencriptar(ar.LeerArchivoPass());

        Process p;

        try {
            p = Runtime.getRuntime().exec("mysql -u " + userD + " -p" + passD + " sistema_compraventa");
            OutputStream is = p.getOutputStream();
            FileInputStream archivo = new FileInputStream("src/DatabaseBackup/sistema_compraventa.sql");

            byte[] buffer = new byte[1000];
            int byteleido = archivo.read(buffer);

            while (byteleido > 0) {
                is.write(buffer, 0, byteleido);
                byteleido = archivo.read(buffer);
            }

            is.flush();
            is.close();
            archivo.close();

            JOptionPane.showMessageDialog(null, "Base de Datos creada correctamente");
            try {
                Thread.sleep(1000);
            } catch (InterruptedException ex) {
                Logger.getLogger(ConexionBD.class.getName()).log(Level.SEVERE, null, ex);
            }
            return true;

        } catch (IOException ex) {
            Logger.getLogger(RespaldoBD.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Error: La importacion de las tablas no pudo ser llevada a cabo");
            JOptionPane.showMessageDialog(null, "Verique el Path u Instalacion del Mysql");
            return false;
        }

    }

}
