/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package vista;

import conexion.Conexion;
import controlador.Ctrl_Productos;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.HeadlessException;
import javax.swing.JOptionPane;
import modelo.Productos;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.sql.SQLException;

/**
 *
 * @author Rama
 */
public class ProductosEditar extends javax.swing.JPanel {

    Productos p = new Productos();
    Ctrl_Productos cp = new Ctrl_Productos();
    String obtenerCategoriaCombo = "";

    /**
     * Creates new form ClientesBuscar
     */
    public ProductosEditar() {
        initComponents();
        this.CargarComboCategorias();
        /* if(Integer.parseInt(ivA) == 16){
            this.ivaComboBox.setSelectedItem("16%");
        }
        else if(Integer.parseInt(ivA) == 0){
            this.ivaComboBox.setSelectedItem("Sin Iva");
        }*/
    }

    public void ObtenerDato(String id, String codigo, String nombre, String cantidad, String precio, String descripcion, String iva, String Categorias) {

        String parseiva = "";
        if (iva.equals("16")) {
            parseiva = "16%";
        } else if (iva.equalsIgnoreCase("0")) {
            parseiva = "Sin Iva";
        }

        CampoInvisible.setText(id);
        CodigoTxt.setText(codigo);
        nombreDPTxt.setText(nombre);
        categoriasComboBox.setSelectedItem(Categorias);
        precioTxt.setText(precio);
        ivaComboBox.setSelectedItem(parseiva);
        cantidadTxt.setText(cantidad);
        descripcionTxt.setText(descripcion);

    }

    //Clase del contador
    public int contador() {

        String caracteres = descripcionTxt.getText().replaceAll("[' '\n]", "");
        int num = 100 - caracteres.length();

        return num;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        CampoInvisible = new javax.swing.JTextField();
        Contenedor = new javax.swing.JPanel();
        RegistroTitulo = new javax.swing.JLabel();
        ButtonActualizar = new vista.JpanelRound();
        TxtActualizar = new javax.swing.JLabel();
        NombreDelProducto = new javax.swing.JLabel();
        nombreDPTxt = new javax.swing.JTextField();
        Categorias = new javax.swing.JLabel();
        categoriasComboBox = new javax.swing.JComboBox<>();
        Precio = new javax.swing.JLabel();
        precioTxt = new javax.swing.JTextField();
        Iva = new javax.swing.JLabel();
        ivaComboBox = new javax.swing.JComboBox<>();
        Cantidad = new javax.swing.JLabel();
        cantidadTxt = new javax.swing.JTextField();
        Descripcion = new javax.swing.JLabel();
        descripcionTxt = new javax.swing.JTextField();
        fondoRegresar = new vista.JpanelRound();
        Regresar = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        ContadorTexto = new javax.swing.JLabel();
        jSeparator7 = new javax.swing.JSeparator();
        jSeparator8 = new javax.swing.JSeparator();
        jSeparator9 = new javax.swing.JSeparator();
        jpanelRound1 = new vista.JpanelRound();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jSeparator10 = new javax.swing.JSeparator();
        CodigoTxt = new javax.swing.JTextField();
        Codigo = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        CampoInvisible.setEnabled(false);

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(700, 450));

        Contenedor.setBackground(new java.awt.Color(255, 255, 255));

        RegistroTitulo.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        RegistroTitulo.setText("Edicion de Producto");

        ButtonActualizar.setBackground(new java.awt.Color(156, 211, 216));
        ButtonActualizar.setPreferredSize(new java.awt.Dimension(100, 50));
        ButtonActualizar.setRoundBottomLeft(10);
        ButtonActualizar.setRoundBottomRight(10);
        ButtonActualizar.setRoundTopLeft(10);
        ButtonActualizar.setRoundTopRight(10);

        TxtActualizar.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        TxtActualizar.setForeground(new java.awt.Color(255, 255, 255));
        TxtActualizar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TxtActualizar.setText("Actualizar");
        TxtActualizar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        TxtActualizar.setPreferredSize(new java.awt.Dimension(100, 50));
        TxtActualizar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                TxtActualizarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                TxtActualizarMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                TxtActualizarMousePressed(evt);
            }
        });

        javax.swing.GroupLayout ButtonActualizarLayout = new javax.swing.GroupLayout(ButtonActualizar);
        ButtonActualizar.setLayout(ButtonActualizarLayout);
        ButtonActualizarLayout.setHorizontalGroup(
            ButtonActualizarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ButtonActualizarLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(TxtActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        ButtonActualizarLayout.setVerticalGroup(
            ButtonActualizarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ButtonActualizarLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(TxtActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        NombreDelProducto.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        NombreDelProducto.setText("Nombre del producto");

        nombreDPTxt.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        nombreDPTxt.setBorder(null);
        nombreDPTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nombreDPTxtKeyTyped(evt);
            }
        });

        Categorias.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        Categorias.setText("Categorias");

        categoriasComboBox.setBackground(new java.awt.Color(156, 211, 216));
        categoriasComboBox.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        categoriasComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione Categoria:" }));
        categoriasComboBox.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        categoriasComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categoriasComboBoxActionPerformed(evt);
            }
        });

        Precio.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        Precio.setText("Precio ($)");

        precioTxt.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        precioTxt.setBorder(null);
        precioTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                precioTxtKeyTyped(evt);
            }
        });

        Iva.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        Iva.setText("Iva");

        ivaComboBox.setBackground(new java.awt.Color(156, 211, 216));
        ivaComboBox.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        ivaComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione Iva:", "Sin Iva", "16%" }));
        ivaComboBox.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ivaComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ivaComboBoxActionPerformed(evt);
            }
        });

        Cantidad.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        Cantidad.setText("Cantidad");

        cantidadTxt.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        cantidadTxt.setBorder(null);
        cantidadTxt.setEnabled(false);
        cantidadTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cantidadTxtKeyTyped(evt);
            }
        });

        Descripcion.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        Descripcion.setText("Descripcion");

        descripcionTxt.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        descripcionTxt.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(3, 150, 166), 1, true));
        descripcionTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                descripcionTxtKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                descripcionTxtKeyTyped(evt);
            }
        });

        fondoRegresar.setBackground(new java.awt.Color(255, 255, 255));
        fondoRegresar.setRoundBottomLeft(10);
        fondoRegresar.setRoundBottomRight(10);
        fondoRegresar.setRoundTopLeft(10);
        fondoRegresar.setRoundTopRight(10);

        Regresar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Regresar.png"))); // NOI18N
        Regresar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Regresar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                RegresarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                RegresarMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                RegresarMousePressed(evt);
            }
        });

        javax.swing.GroupLayout fondoRegresarLayout = new javax.swing.GroupLayout(fondoRegresar);
        fondoRegresar.setLayout(fondoRegresarLayout);
        fondoRegresarLayout.setHorizontalGroup(
            fondoRegresarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, fondoRegresarLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(Regresar))
        );
        fondoRegresarLayout.setVerticalGroup(
            fondoRegresarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, fondoRegresarLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(Regresar))
        );

        jLabel2.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(6, 150, 166));
        jLabel2.setText("*");

        jLabel4.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(6, 150, 166));
        jLabel4.setText("*");

        jLabel1.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(6, 150, 166));
        jLabel1.setText("Campos Obligatorios (*)");

        ContadorTexto.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        ContadorTexto.setForeground(new java.awt.Color(6, 150, 166));
        ContadorTexto.setText("100");

        jSeparator7.setForeground(new java.awt.Color(6, 150, 166));
        jSeparator7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(6, 150, 166)));

        jSeparator8.setForeground(new java.awt.Color(6, 150, 166));
        jSeparator8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(6, 150, 166)));

        jSeparator9.setForeground(new java.awt.Color(6, 150, 166));
        jSeparator9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(6, 150, 166)));

        jpanelRound1.setBackground(new java.awt.Color(255, 255, 255));
        jpanelRound1.setRoundBottomLeft(10);
        jpanelRound1.setRoundBottomRight(10);
        jpanelRound1.setRoundTopLeft(10);
        jpanelRound1.setRoundTopRight(10);

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Añadir categoria.png"))); // NOI18N
        jLabel5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel5MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel5MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel5MousePressed(evt);
            }
        });

        javax.swing.GroupLayout jpanelRound1Layout = new javax.swing.GroupLayout(jpanelRound1);
        jpanelRound1.setLayout(jpanelRound1Layout);
        jpanelRound1Layout.setHorizontalGroup(
            jpanelRound1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpanelRound1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel5))
        );
        jpanelRound1Layout.setVerticalGroup(
            jpanelRound1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpanelRound1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel5))
        );

        jLabel6.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(6, 150, 166));
        jLabel6.setText("*");

        jLabel7.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(6, 150, 166));
        jLabel7.setText("*");

        jSeparator10.setForeground(new java.awt.Color(6, 150, 166));
        jSeparator10.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(6, 150, 166)));

        CodigoTxt.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        CodigoTxt.setBorder(null);
        CodigoTxt.setEnabled(false);
        CodigoTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                CodigoTxtKeyTyped(evt);
            }
        });

        Codigo.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        Codigo.setText("Codigo");

        jLabel3.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(6, 150, 166));
        jLabel3.setText("*");

        javax.swing.GroupLayout ContenedorLayout = new javax.swing.GroupLayout(Contenedor);
        Contenedor.setLayout(ContenedorLayout);
        ContenedorLayout.setHorizontalGroup(
            ContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ContenedorLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(ContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fondoRegresar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(ContenedorLayout.createSequentialGroup()
                        .addComponent(RegistroTitulo)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1))
                    .addGroup(ContenedorLayout.createSequentialGroup()
                        .addComponent(NombreDelProducto)
                        .addGap(6, 6, 6)
                        .addComponent(jLabel2)
                        .addGap(101, 101, 101)
                        .addComponent(Codigo)
                        .addGap(6, 6, 6)
                        .addComponent(jLabel3))
                    .addGroup(ContenedorLayout.createSequentialGroup()
                        .addComponent(nombreDPTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)
                        .addComponent(CodigoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ContenedorLayout.createSequentialGroup()
                        .addComponent(jSeparator8, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)
                        .addComponent(jSeparator10, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ContenedorLayout.createSequentialGroup()
                        .addComponent(Precio)
                        .addGap(11, 11, 11)
                        .addComponent(jLabel4)
                        .addGap(44, 44, 44)
                        .addComponent(Iva)
                        .addGap(131, 131, 131)
                        .addComponent(Cantidad)
                        .addGap(13, 13, 13)
                        .addComponent(jLabel7)
                        .addGap(53, 53, 53)
                        .addComponent(Categorias))
                    .addGroup(ContenedorLayout.createSequentialGroup()
                        .addGroup(ContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(precioTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSeparator9, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(60, 60, 60)
                        .addComponent(ivaComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38)
                        .addGroup(ContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cantidadTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(50, 50, 50)
                        .addComponent(categoriasComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(jpanelRound1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ContenedorLayout.createSequentialGroup()
                        .addGroup(ContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ContenedorLayout.createSequentialGroup()
                                .addComponent(Descripcion)
                                .addGap(8, 8, 8)
                                .addComponent(jLabel6)
                                .addGap(364, 364, 364)
                                .addComponent(ContadorTexto))
                            .addComponent(descripcionTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(45, 45, 45)
                        .addComponent(ButtonActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        ContenedorLayout.setVerticalGroup(
            ContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ContenedorLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(fondoRegresar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addGroup(ContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(RegistroTitulo)
                    .addGroup(ContenedorLayout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jLabel1)))
                .addGap(28, 28, 28)
                .addGroup(ContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(NombreDelProducto)
                    .addComponent(jLabel2)
                    .addComponent(Codigo)
                    .addComponent(jLabel3))
                .addGap(13, 13, 13)
                .addGroup(ContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nombreDPTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CodigoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(ContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addGroup(ContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Precio)
                    .addComponent(jLabel4)
                    .addComponent(Iva)
                    .addComponent(Cantidad)
                    .addComponent(jLabel7)
                    .addComponent(Categorias))
                .addGap(2, 2, 2)
                .addGroup(ContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ContenedorLayout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(precioTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(jSeparator9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ContenedorLayout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(ivaComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ContenedorLayout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(cantidadTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ContenedorLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(categoriasComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jpanelRound1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51)
                .addGroup(ContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ContenedorLayout.createSequentialGroup()
                        .addGroup(ContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Descripcion)
                            .addComponent(jLabel6)
                            .addComponent(ContadorTexto))
                        .addGap(3, 3, 3)
                        .addComponent(descripcionTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(ButtonActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Contenedor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Contenedor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void RegresarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RegresarMousePressed
        ListadoProductos lp = new ListadoProductos();
        lp.setSize(700, 450);
        lp.setLocation(0, 0);

        Contenedor.removeAll();
        Contenedor.add(lp, BorderLayout.CENTER);
        Contenedor.revalidate();
        Contenedor.repaint();
    }//GEN-LAST:event_RegresarMousePressed

    private void RegresarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RegresarMouseExited
        fondoRegresar.setBackground(new Color(255, 255, 255));
    }//GEN-LAST:event_RegresarMouseExited

    private void RegresarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RegresarMouseEntered
        fondoRegresar.setBackground(new Color(244, 244, 244));
    }//GEN-LAST:event_RegresarMouseEntered

    private void descripcionTxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_descripcionTxtKeyTyped
        ContadorTexto.setText(contador() + "");
        if (descripcionTxt.getText().length() >= 200) {
            evt.consume();
        }
    }//GEN-LAST:event_descripcionTxtKeyTyped

    private void cantidadTxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cantidadTxtKeyTyped
        char ch = evt.getKeyChar();
        if (cantidadTxt.getText().length() >= 11 || ch < '0' || ch > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_cantidadTxtKeyTyped

    private void TxtActualizarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TxtActualizarMousePressed
        //Getter and setters
        String iva = ivaComboBox.getSelectedItem().toString().trim();
        String categoria = categoriasComboBox.getSelectedItem().toString().trim();

        if (!nombreDPTxt.getText().isEmpty() && !CodigoTxt.getText().isEmpty() && !precioTxt.getText().isEmpty() && !cantidadTxt.getText().isEmpty() && !descripcionTxt.getText().isEmpty()) {
            //if de metodo de duplicacion
            if (iva.equalsIgnoreCase("Seleccione Iva:")) {
                JOptionPane.showMessageDialog(null, "Seleccione el Iva");
            } else {

                if (categoria.equalsIgnoreCase("Seleccione Categoria:")) {
                    JOptionPane.showMessageDialog(null, "Seleccione la Categoria");
                } else {

                    try {
                        p.setCodigo(CodigoTxt.getText());
                        p.setIdProducto(Integer.parseInt(CampoInvisible.getText()));
                        p.setProducto(nombreDPTxt.getText());
                        p.setCantidad(Integer.parseInt(cantidadTxt.getText()));
                        p.setDescripcion(descripcionTxt.getText());
                        String precioTXT = "";
                        double Precio = 0.0;
                        precioTXT = precioTxt.getText().trim();
                        boolean aux = false;
                        /*
                            Si el usuario ingresa una , (coma) como punto decimal
                            se transforma a punto.
                         */
                        for (int i = 0; i < precioTXT.length(); i++) {
                            if (precioTXT.charAt(i) == ',') {
                                String precioNuevo = precioTXT.replace(",", ".");
                                Precio = Double.parseDouble(precioNuevo);
                                aux = true;
                            }
                        }

                        //Evaluacion de la condicion
                        if (aux == true) {
                            p.setPrecio(Precio);
                        } else {
                            Precio = Double.parseDouble(precioTXT);
                            p.setPrecio(Precio);
                        }

                        if (iva.equalsIgnoreCase("Sin Iva")) {
                            p.setPorcentajeIVA(0);
                        } else if (iva.equalsIgnoreCase("16%")) {
                            p.setPorcentajeIVA(16);
                        }

                        //Cargar metodo que obtiene el idCategoria
                        if(this.obtenerCategoria().isEmpty()){
                               p.setCategoria("Sin Categoria"); 
                            }else{
                               p.setCategoria(obtenerCategoriaCombo);
                            }
                          

                        cp.editar(p);
                        JOptionPane.showMessageDialog(null, "Producto actualizado con Exito");
                        ListadoProductos pb = new ListadoProductos();
                        pb.setSize(700, 450);
                        pb.setLocation(0, 0);

                        Contenedor.removeAll();
                        Contenedor.add(pb, BorderLayout.CENTER);
                        Contenedor.revalidate();
                        Contenedor.repaint();

                    } catch (HeadlessException | NumberFormatException e) {
                        System.out.println("Error en: " + e);
                    }

                }
            }

        } else {
            JOptionPane.showMessageDialog(null, "Complete todos los datos");
        }
    }//GEN-LAST:event_TxtActualizarMousePressed

    private void TxtActualizarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TxtActualizarMouseExited
        ButtonActualizar.setBackground(new Color(156, 211, 216));
    }//GEN-LAST:event_TxtActualizarMouseExited

    private void TxtActualizarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TxtActualizarMouseEntered
        ButtonActualizar.setBackground(new Color(3, 150, 166));
    }//GEN-LAST:event_TxtActualizarMouseEntered

    private void precioTxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_precioTxtKeyTyped
        char ch = evt.getKeyChar();
        if (cantidadTxt.getText().length() >= 12
                || (!Character.isDigit(ch) && ch != '.' && ch != ',')) {
            evt.consume();
        }
    }//GEN-LAST:event_precioTxtKeyTyped

    private void nombreDPTxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nombreDPTxtKeyTyped
        char ch = evt.getKeyChar();
        if (nombreDPTxt.getText().length() >= 100 || (!Character.isLetterOrDigit(ch) && ch != ' ')) { evt.consume(); }
    }//GEN-LAST:event_nombreDPTxtKeyTyped

    private void ivaComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ivaComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ivaComboBoxActionPerformed

    private void jLabel5MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MousePressed
        Categorias ct = new Categorias();
        ct.setSize(700, 450);
        ct.setLocation(0, 0);

        Contenedor.removeAll();
        Contenedor.add(ct, BorderLayout.CENTER);
        Contenedor.revalidate();
        Contenedor.repaint();
    }//GEN-LAST:event_jLabel5MousePressed

    private void categoriasComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categoriasComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_categoriasComboBoxActionPerformed

    private void jLabel5MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseEntered
        jpanelRound1.setBackground(new Color(244, 244, 244));
    }//GEN-LAST:event_jLabel5MouseEntered

    private void jLabel5MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseExited
        jpanelRound1.setBackground(new Color(255, 255, 255));
    }//GEN-LAST:event_jLabel5MouseExited

    private void CodigoTxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CodigoTxtKeyTyped
        char ch = evt.getKeyChar();
        if (CodigoTxt.getText().length() >= 13 || ch < '0' || ch > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_CodigoTxtKeyTyped

    private void descripcionTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_descripcionTxtKeyReleased
       ContadorTexto.setText(contador() + "");
    }//GEN-LAST:event_descripcionTxtKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private vista.JpanelRound ButtonActualizar;
    private javax.swing.JTextField CampoInvisible;
    private javax.swing.JLabel Cantidad;
    private javax.swing.JLabel Categorias;
    private javax.swing.JLabel Codigo;
    private javax.swing.JTextField CodigoTxt;
    public javax.swing.JLabel ContadorTexto;
    private javax.swing.JPanel Contenedor;
    private javax.swing.JLabel Descripcion;
    private javax.swing.JLabel Iva;
    private javax.swing.JLabel NombreDelProducto;
    private javax.swing.JLabel Precio;
    private javax.swing.JLabel RegistroTitulo;
    private javax.swing.JLabel Regresar;
    private javax.swing.JLabel TxtActualizar;
    private javax.swing.JTextField cantidadTxt;
    private javax.swing.JComboBox<String> categoriasComboBox;
    private javax.swing.JTextField descripcionTxt;
    private vista.JpanelRound fondoRegresar;
    private javax.swing.JComboBox<String> ivaComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JSeparator jSeparator10;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JSeparator jSeparator9;
    private vista.JpanelRound jpanelRound1;
    private javax.swing.JTextField nombreDPTxt;
    private javax.swing.JTextField precioTxt;
    // End of variables declaration//GEN-END:variables

    private void CargarComboCategorias() {

        Connection cn = Conexion.conectar();
        String sql = "select * from categorias";
        Statement st;

        try {

            st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            categoriasComboBox.removeAllItems();
            categoriasComboBox.addItem("Seleccione una categoria: ");

            while (rs.next()) {
                categoriasComboBox.addItem(rs.getString("categoria"));
            }
            cn.close();

        } catch (SQLException e) {
            System.out.println("Error al cargar categorias");
        }

    }

    private String obtenerCategoria() {
        String sql = "select * from categorias where categoria = '" + this.categoriasComboBox.getSelectedItem() + "'";
        Statement st;

        try {

            Connection cn = Conexion.conectar();
            st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);

            while (rs.next()) {
                obtenerCategoriaCombo = rs.getString("categoria");
            }

        } catch (SQLException e) {
            System.out.println("Error al obtener la categoria");
        }
        return obtenerCategoriaCombo;
    }

}
